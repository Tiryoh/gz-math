load("@buildifier_prebuilt//:rules.bzl", "buildifier", "buildifier_test")
load("@rules_gz//gz:headers.bzl", "gz_configure_header", "gz_export_header", "gz_include_header")
load("@rules_license//rules:license.bzl", "license")

package(
    default_applicable_licenses = [":license"],
)

license(
    name = "license",
    package_name = "gz-math",
)

exports_files([
    "LICENSE",
    "MODULE.bazel",
])

gz_configure_header(
    name = "config",
    src = "include/gz/math/config.hh.in",
    cmakelists = ["CMakeLists.txt"],
    package = "math",
)

gz_export_header(
    name = "include/gz/math/Export.hh",
    export_base = "GZ_MATH",
    lib_name = "gz-math",
    visibility = ["//visibility:private"],
)

public_headers_no_gen = glob([
    "include/gz/math/*.hh",
    "include/gz/math/detail/*.hh",
    "include/gz/math/graph/*.hh",
])

private_headers = glob(["src/*.hh"])

sources = glob(
    ["src/*.cc"],
    exclude = ["src/*_TEST.cc"],
)

gz_include_header(
    name = "math_hh_genrule",
    out = "include/gz/math.hh",
    hdrs = public_headers_no_gen + [
        "include/gz/math/Export.hh",
        "include/gz/math/config.hh",
    ],
)

public_headers = public_headers_no_gen + [
    "include/gz/math/config.hh",
    "include/gz/math/Export.hh",
    "include/gz/math.hh",
]

cc_library(
    name = "gz-math",
    srcs = sources + private_headers,
    hdrs = public_headers,
    copts = ["-fexceptions"],
    includes = ["include"],
    visibility = ["//visibility:public"],
    deps = [
        "@gz-utils",
    ],
)

# Tests
test_sources = glob(
    [
        "src/*_TEST.cc",
        "src/graph/*_TEST.cc",
    ],
)

[cc_test(
    name = src.replace("/", "_").replace(".cc", "").replace("src_", ""),
    srcs = [src],
    deps = [
        ":gz-math",
        "@googletest//:gtest_main",
    ],
) for src in test_sources]

# Bazel linting
buildifier(
    name = "buildifier.fix",
    exclude_patterns = ["./.git/*"],
    lint_mode = "fix",
    mode = "fix",
)

buildifier_test(
    name = "buildifier.test",
    exclude_patterns = ["./.git/*"],
    lint_mode = "warn",
    mode = "diff",
    no_sandbox = True,
    workspace = "//:MODULE.bazel",
)
